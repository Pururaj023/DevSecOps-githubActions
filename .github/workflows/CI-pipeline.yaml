name: DevSecOps CI Pipeline

on:
  workflow_dispatch:

jobs:
  stage1-Build-docker-Image:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t react-dice-game ./dice-game

      - name: Run Docker Container
        run: docker run -d -p 80:80 --name dice-game-container react-dice-game

      - name: Test Application
        run: |
          sleep 10  # Wait for the container to start
          curl -f http://localhost:80 || exit 1
  
  stage2-Scan-with-sonarQube:
    runs-on: ubuntu-latest
    needs: stage1-Build-docker-Image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=react-dice-game \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

  stage3-Scan-with-Trivy:
    runs-on: ubuntu-latest
    needs: stage1-Build-docker-Image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Scan Docker Image with Trivy
        run: |
          trivy image react-dice-game
  
  stage4-Scan-with-owasp:
    runs-on: ubuntu-latest
    needs: stage1-Build-docker-Image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install OWASP ZAP
        run: |
          sudo apt-get update
          sudo apt-get install -y zaproxy

      - name: Start OWASP ZAP in daemon mode
        run: |
          zap.sh -daemon -port 8090 -host

  stage5-Push-image-to-DockerHub:
    runs-on: ubuntu-latest
    needs: [stage1-Build-docker-Image, stage2-Scan-with-sonarQube, stage3-Scan-with-Trivy, stage4-Scan-with-owasp]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Image
        run: |
          docker tag react-dice-game ${{ secrets.DOCKER_HUB_USERNAME }}/react-dice-game:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/react-dice-game:latest

  stage6-Notify-via-Gmail:
    runs-on: ubuntu-latest
    needs: stage5-Push-image-to-DockerHub

    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Docker Image Build and Scan Successful
          body: The Docker image has been built, scanned, and pushed to Docker Hub successfully.
          to: ${{ secrets.NOTIFICATION_EMAIL }}